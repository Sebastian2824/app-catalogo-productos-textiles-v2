name: Build and SonarQube Analysis
on:
  push:
    branches: [main, master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Setup Java (necesario para el scanner de SonarQube)
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: |
          if [ -f "package.json" ]; then
            npm ci
          else
            echo "No package.json found"
          fi
          
      - name: Run JavaScript tests with coverage
        run: |
          if [ -f "package.json" ]; then
            # Si usas Jest
            if grep -q "jest" package.json; then
              npm test -- --coverage --watchAll=false
            # Si usas Mocha
            elif grep -q "mocha" package.json; then
              npx mocha --reporter json-stream --reporter-option output=test-results.json
            else
              echo "No test runner detected in package.json"
            fi
          else
            echo "No package.json, skipping JavaScript tests"
          fi
          
      - name: Generate coverage report if missing
        run: |
          # Crear directorio de coverage si no existe
          mkdir -p coverage
          # Si no hay reporte de cobertura, crear uno bÃ¡sico
          if [ ! -f "coverage/lcov.info" ] && [ -d "src" ] || [ -d "lib" ]; then
            echo "No coverage data found" > coverage/lcov.info
          fi
          
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
